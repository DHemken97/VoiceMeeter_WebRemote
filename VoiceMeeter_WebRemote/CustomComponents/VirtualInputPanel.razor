<section id="strip_@StripId" class="virtualInputPanel" style="height:100%;">
    <div class="sectionLabel" style="margin-top:0px; font-size:14px;">Virtual Input @(StripId + 1)</div>
    <div class="label">48.0 kHz - 7168 L</div>
    <section class="darkBackgroud">
        <div class="hstack" style="padding-top:15px;">
            <p class="label">EQUALIZER</p>          
        </div>
        <div class ="hstack">
            <Knob style="margin-top:-25px; margin-left:5px; margin-right:10px;" CommandPath="@InLineConverter.Concat("Strip[",@StripId.ToString(),"].EQGain3")" />
            <div style="padding-left:10px; margin-top:-10px;">
                <p class="label" style="margin-top:-10px;" >Treble</p>
                <p class="sectionLabel" style="margin-top:-20px;">0.0</p>
            </div>     
        </div>

                <div class ="hstack">
            <div style="padding-left:10px;">
                <p class="sectionLabel" style="margin-top:-10px;">0.0</p>
            </div>
            <Knob style="margin-top:-25px; margin-left:20px; margin-right:5px;" CommandPath="@InLineConverter.Concat("Strip[",@StripId.ToString(),"].EQGain2")" />


        </div>

        <div class="hstack" style="padding-bottom:5px;">
            <Knob style="margin-top:-25px; margin-left:5px; margin-right:10px;" CommandPath="@InLineConverter.Concat("Strip[",@StripId.ToString(),"].EQGain1")" />
            <div style="padding-left:10px; margin-top:-5px;">
                <p class="sectionLabel" style="margin-top:-5px;">0.0</p>
                <p class="label" style="margin-top:-20px;">Bass</p>

            </div>   
        </div>



        
        <div class="hstack">
         
            <div class="pan" />
            <div style="padding-left:4px;">
                <LevelVisualizer Channels=2 StartChannel="@(StripId*2)" Style="height:60px;" levelType="Voicemeeter.LevelType.PostFaderInput"></LevelVisualizer>
            </div>
        </div>
        <div class="hstack" style="height:155px;">
         </div>
        <section class="hstack">
           
            
            <Fader CommandPath="@InLineConverter.Concat("Strip[",@StripId.ToString(),"].Gain")" Style="margin-left:10px;"></Fader>
            <div style="margin-left:auto;">
                <ToggleButton Text="▶A1" ActiveColor="@Colors.Toggle_Button_Active_Green" InactiveColor="@Colors.Toggle_Button_Inactive" style="font-size:12px;" CommandPath="@InLineConverter.Concat("Strip[",@StripId.ToString(),"].A1")" />
                <ToggleButton Text="▶A2" ActiveColor="@Colors.Toggle_Button_Active_Green" InactiveColor="@Colors.Toggle_Button_Inactive" style="font-size:12px;" CommandPath="@InLineConverter.Concat("Strip[",@StripId.ToString(),"].A2")"/>
                <ToggleButton Text="▶A3" ActiveColor="@Colors.Toggle_Button_Active_Green" InactiveColor="@Colors.Toggle_Button_Inactive" style="font-size:12px;" CommandPath="@InLineConverter.Concat("Strip[",@StripId.ToString(),"].A3")"/>
                <ToggleButton Text="▶A4" ActiveColor="@Colors.Toggle_Button_Active_Green" InactiveColor="@Colors.Toggle_Button_Inactive" style="font-size:12px;" CommandPath="@InLineConverter.Concat("Strip[",@StripId.ToString(),"].A4")" />
                <ToggleButton Text="▶A5" ActiveColor="@Colors.Toggle_Button_Active_Green" InactiveColor="@Colors.Toggle_Button_Inactive" style="font-size:12px;" CommandPath="@InLineConverter.Concat("Strip[",@StripId.ToString(),"].A5")" />
                <ToggleButton Text="▶B1" ActiveColor="@Colors.Toggle_Button_Active_Green" InactiveColor="@Colors.Toggle_Button_Inactive" style="font-size:12px;" CommandPath="@InLineConverter.Concat("Strip[",@StripId.ToString(),"].B1")" />
                <ToggleButton Text="▶B2" ActiveColor="@Colors.Toggle_Button_Active_Green" InactiveColor="@Colors.Toggle_Button_Inactive" style="font-size:12px;" CommandPath="@InLineConverter.Concat("Strip[",@StripId.ToString(),"].B2")" />
                <ToggleButton Text="▶B3" ActiveColor="@Colors.Toggle_Button_Active_Green" InactiveColor="@Colors.Toggle_Button_Inactive" style="font-size:12px;" CommandPath="@InLineConverter.Concat("Strip[",@StripId.ToString(),"].B3")" />
                <ToggleButton Text="MC" ActiveColor="@Colors.Toggle_Button_Active_Red" InactiveColor="@Colors.Toggle_Button_Inactive" style="font-size:12px;" CommandPath="@InLineConverter.Concat("Strip[",@StripId.ToString(),"].MC")" />
                <ToggleButton Text="solo" ActiveColor="@Colors.Toggle_Button_Active_Yellow" InactiveColor="@Colors.Toggle_Button_Inactive" style="font-size:12px;" CommandPath="@InLineConverter.Concat("Strip[",@StripId.ToString(),"].Solo")" ValueChanged="OnSoloChanged" />
                <ToggleButton Text="Mute" ActiveColor="@Colors.Toggle_Button_Active_Red" InactiveColor="@Colors.Toggle_Button_Inactive" style="font-size:12px;" CommandPath="@InLineConverter.Concat("Strip[",@StripId.ToString(),"].Mute")" TempActive="@(TempMute>0)" />

            </div>
        </section>
    </section>
</section>
@code {
    [Parameter]
    public int StripId { get; set; }
    [Parameter]
    public int TempMute { get; set; }
    [Parameter]
    public VoiceMeeterConsole Console { get; set; }


    public void OnSoloChanged(NotificationComponent component)
    {
        if (component is ToggleButton)
        {
            var btn = component as ToggleButton;
            var val = btn.Value;
            if (val) VoiceMeeterConsole.SoloStrips.Add(StripId);
            else VoiceMeeterConsole.SoloStrips.Remove(StripId);
            Console?.UpdateState();
        }
    }
}
